# Generated by Django 4.1.13 on 2023-11-23 15:48

from django.db import migrations
from django.utils import timezone
from django.contrib.auth.hashers import make_password


def add_initial_user(apps, schema_editor):
    User = apps.get_model("users", "User")
    Profissional = apps.get_model("common", "Profissional")
    Usuario = apps.get_model("common", "Usuario")
    Profissao = apps.get_model("common", "Profissao")
    Group = apps.get_model("auth", "Group")
    Grupos = apps.get_model("common", "Grupo")
    UsuarioGrupo = apps.get_model("common", "UsuarioGrupo")
    cpf = "81321345589"
    username = "administrador"
    profissao_analista = Profissao.objects.get(
        descricao="ANALISTA DE SISTEMAS"
    )

    if Profissional.objects.filter(cpf=cpf).exists():
        raise Exception(
            "Já existe um profissional com esse CPF. "
            "Por favor, altere o CPF do profissional e "
            "execute novamente a migração."
        )

    profissional = Profissional(
        nome="Mestre dos Magos",
        cpf=cpf,
        dtadmissao=timezone.now(),
        dtcadastro=timezone.now(),
        dtnascimento=timezone.now(),
        email="suporte@siscme.com.br",
        matricula="000001",
        sexo="M",
        rt="N",
        atrelado="N",
        status="ADMITIDO",
        idprofissao=profissao_analista,
    )
    profissional.save()

    django_user = User.objects.create(
        username=username,
        email="suporte@siscme.com.br",
        password=make_password(f"siscme@{timezone.now().year}"),
        is_superuser=True,
        is_staff=True,
        is_active=True,
        idprofissional=profissional,
    )
    django_user.save()

    groups = Group.objects.all()

    for group in groups:
        django_user.groups.add(group)

    if Usuario.objects.filter(apelidousu=username).exists():
        raise Exception(
            "Já existe um usuário com esse username. "
            "Por favor, altere o username do usuário e "
            "execute novamente a migração."
        )

    usuario = Usuario(
        apelidousu=username,
        ativo=True,
        datacadastrousu=timezone.now(),
        senhausu=make_password(f"siscme@{timezone.now().year}"),
        idprofissional=profissional,
    )
    usuario.save()

    grupos = Grupos.objects.all()

    for grupo in grupos:
        usuario_grupo = UsuarioGrupo(
            usuario=usuario,
            grupo=grupo,
        )
        usuario_grupo.save()


def remove_initial_user(apps, schema_editor):
    User = apps.get_model("users", "User")
    Profissional = apps.get_model("common", "Profissional")
    Usuario = apps.get_model("common", "Usuario")
    UsuarioGrupo = apps.get_model("common", "UsuarioGrupo")
    username = "administrador"
    cpf = "81321345589"

    usuario = Usuario.objects.get(apelidousu=username)
    usuarios_grupo = UsuarioGrupo.objects.filter(usuario=usuario.idusu).all()
    usuarios_grupo.delete()
    usuario.delete()

    django_user = User.objects.get(username=username)
    django_user.groups.clear()
    django_user.delete()

    profissional = Profissional.objects.get(cpf=cpf)
    profissional.delete()


class Migration(migrations.Migration):
    dependencies = [
        ("common", "0102_add_profissoes"),
        ("common", "0103_alter_grupo_idgrupo"),
    ]

    operations = [
        migrations.RunPython(add_initial_user, remove_initial_user),
    ]
